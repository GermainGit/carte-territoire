<div id="notice"><%= notice %></div>

<%= link_to image_tag('arrow.svg', alt: 'bouton retour', id: 'back_img'), photos_path, id: 'back' %>
<div class="container">
  <div class="row showrow">
    <div class="col-md-6">
      <%= image_tag @photo.file.url, class: 'img-fluid', id: 'img_fluid' %>
      <p class="userlink">Photo prise par <%= link_to_if @photo.user.public, @photo.user, @photo.user %></p>
    </div>
    <div class="col-md-5 offset-md-1">
      <h1><%= @photo.title %></h1>
        <p class="date">Photo prise le : <%= @photo.date %></p>
        <p><%= @photo.content %></p>
        <% if user_signed_in? && @photo.user == current_user %>
        <div class="btn">
          <%= link_to 'Modifier', edit_photo_path(@photo) %>
        </div>
        <% end %>
        <div id="mapid" >
        </div>
    </div>
  </div>
</div>




<div class="modal" id="myModal">
  <div class="modal-content" id="content_img_modal">
     <span class="close_modal">&times;</span>
      <%= image_tag @photo.file.url, class: 'img-fluid', id: 'img_modal' %>
  </div>
</div>

<script src="https://unpkg.com/leaflet@1.4.0/dist/leaflet.js"
        integrity="sha512-QVftwZFqvtRNi0ZyCtsznlKSWOStnDORoefr1enyq5mVL4tmKB3S/EnC3rRJcxCPavG10IcrVGSmPh6Qw5lwrg=="
        crossorigin=""></script>
<script>
  var map = new L.Map('mapid').setView([44.84561111, -0.58027778], 6);

 L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.{ext}', {
    attribution: '&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors',
    maxZoom: 18,
    minZoom: 10,
    ext: 'png'
 }).addTo(map);
 map.attributionControl.setPrefix('');

var southWest = L.latLng(42.58155760646617, -0.90),
northEast = L.latLng(46.99346179538875, -0.02);
var bounds = L.latLngBounds(southWest, northEast);

map.setMaxBounds(bounds);
map.on('drag', function(){
  map.panInsideBounds(bounds, { animate: true});
});

 // Define an array. This could be done in a seperate js file.
 // This tidy formatted section could even be generated by a server-side script
 // or fetched seperately as a jsonp request.



    var long = <%= @photo.long %>;
    var lat = <%= @photo.lat %>;
    var popupText = "<%= @photo.title %>";
    var icon = L.icon({
      iconUrl: '<%= @photo.file %>',
      iconSize: [45, 45]
    });
    var markerLocation = new L.LatLng(lat, long);
    var marker = new L.Marker(markerLocation, {icon: icon});
    map.addLayer(marker);

    marker.bindPopup(popupText);


</script>
